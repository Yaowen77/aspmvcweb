@model WebApplication1.Models.Member.Member

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

@if (ViewBag.ResultMessage != null)//判斷如果有訊息，則顯示。
{
    //@Html.Label("info", (string)ViewBag.ResultMessage, new { @class = "text-info" })
    <script type="text/javascript">
            var message = @Html.Raw(Json.Encode(ViewBag.ResultMessage));
            alert(message);
    </script>
}

@using (Html.BeginForm("Edit", "Member", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br></br>
        <h2>會員資料修改作業</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MemberID)


        <div class="form-group">
            <div class="col-md-2">
                @{
                    if (Model.MemberImage != null)
                    {
                        var base64 = Convert.ToBase64String(Model.MemberImage);
                        var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);
                        <img src="@imgSrc" width="200" height="200" />
                    }
                    else
                    {
                        <img src="" width="200" height="200" />
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MemberID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberID, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MemberID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MemberName, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MemberName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MemberName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobilPhone, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobilPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobilPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EMail, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.TextBox("file", "", new { type = "file", accept = ".jpg" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="存檔" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回清單", "Index")
</div>



